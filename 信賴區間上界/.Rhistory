or
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
or
setwd("C:/Users/User/Desktop/machine-learning/信賴區間上界")
#read
data = read.csv('Ads_CTR_Optimisation.csv')
#read
data = read.csv('Ads_CTR_Optimisation.csv')
#read
data = read.csv('Ads_CTR_Optimisation.csv')
#信賴區間上界
#10個廣告
d = 10
#初始化廣告播放次數(10個元素起始值為0)
numbers_of_selections = integer(d)
sums_of_rewards = integer(d)
#read
data = read.csv('Ads_CTR_Optimisation.csv')
#信賴區間上界
#10個廣告
d = 10
#10000個用戶
n = 10000
#初始化廣告播放次數(10個元素起始值為0)
numbers_of_selections = integer(d)
sums_of_rewards = integer(d)
for (n in 1:n) {
#每一個客戶開始會初始化
max_upper_bound = 0 #最大信賴區間上界
ad = 0 #第i個廣告
for (i in 1:d) {
if(numbers_of_selections[i] > 0) {
#平均點擊數
average_reward = sums_of_rewards[i] / numbers_of_selections
delta_i = sqrt(3 / 2 * log(n) / nnumbers_of_selections[i])
#信賴區間上界
upper_bound = average_reward + delta_i
}
else {
max_upper_bound = 1e400
}
if (upper_bound > max_upper_bound) {
max_upper_bound = upper_bound
ad = i
}
}
}
#read
data = read.csv('Ads_CTR_Optimisation.csv')
#信賴區間上界
#10個廣告
d = 10
#10000個用戶
n = 10000
#初始化廣告播放次數(10個元素起始值為0)
numbers_of_selections = integer(d)
sums_of_rewards = integer(d)
for (n in 1:n) {
#每一個客戶開始會初始化
max_upper_bound = 0 #最大信賴區間上界
ad = 0 #第i個廣告
for (i in 1:d) {
if(numbers_of_selections[i] > 0) {
#平均點擊數
average_reward = sums_of_rewards[i] / numbers_of_selections
delta_i = sqrt(3 / 2 * log(n) / nnumbers_of_selections[i])
#信賴區間上界
upper_bound = average_reward + delta_i
}
else {
upper_bound = 1e400
}
if (upper_bound > max_upper_bound) {
max_upper_bound = upper_bound
ad = i
}
}
}
#read
data = read.csv('Ads_CTR_Optimisation.csv')
#信賴區間上界
#10個廣告
d = 10
#10000個用戶
n = 10000
#初始化廣告播放次數(10個元素起始值為0)
numbers_of_selections = integer(d)
sums_of_rewards = integer(d)
#紀錄每個人被發放哪一個廣告
ads_selected = integer()
total_reward = 0
for (n in 1:n) {
#每一個客戶開始會初始化
max_upper_bound = 0 #最大信賴區間上界
ad = 0 #第i個廣告
for (i in 1:d) {
if(numbers_of_selections[i] > 0) {
#平均點擊數
average_reward = sums_of_rewards[i] / numbers_of_selections
delta_i = sqrt(3 / 2 * log(n) / nnumbers_of_selections[i])
#信賴區間上界
upper_bound = average_reward + delta_i
}
else {
upper_bound = 1e400
}
if (upper_bound > max_upper_bound) {
max_upper_bound = upper_bound
ad = i
}
}
ads_selected = append(ads_selected, ad)
#被播放過後會加一次
numbers_of_selections[ad] = numbers_of_selections[ad] + 1
#查看是否被點擊
reward = data[n, i]
sums_of_rewards[ad] = sums_of_rewards[ad] + reward
total_reward = total_reward + reward
}
#read
data = read.csv('Ads_CTR_Optimisation.csv')
#信賴區間上界
#10個廣告
d = 10
#10000個用戶
n = 10000
#初始化廣告播放次數(10個元素起始值為0)
numbers_of_selections = integer(d)
sums_of_rewards = integer(d)
#紀錄每個人被發放哪一個廣告
ads_selected = integer()
total_reward = 0
for (n in 1:n) {
#每一個客戶開始會初始化
max_upper_bound = 0 #最大信賴區間上界
ad = 0 #第i個廣告
for (i in 1:d) {
if(numbers_of_selections[i] > 0) {
#平均點擊數
average_reward = sums_of_rewards[i] / numbers_of_selections
delta_i = sqrt(3 / 2 * log(n) / numbers_of_selections[i])
#信賴區間上界
upper_bound = average_reward + delta_i
}
else {
upper_bound = 1e400
}
if (upper_bound > max_upper_bound) {
max_upper_bound = upper_bound
ad = i
}
}
ads_selected = append(ads_selected, ad)
#被播放過後會加一次
numbers_of_selections[ad] = numbers_of_selections[ad] + 1
#查看是否被點擊
reward = data[n, i]
#廣告點擊數增加
sums_of_rewards[ad] = sums_of_rewards[ad] + reward
#總點擊數
total_reward = total_reward + reward
}
#read
data = read.csv('Ads_CTR_Optimisation.csv')
#信賴區間上界
#10個廣告
d = 10
#10000個用戶
n = 10000
#初始化廣告播放次數(10個元素起始值為0)
numbers_of_selections = integer(d)
sums_of_rewards = integer(d)
#紀錄每個人被發放哪一個廣告
ads_selected = integer()
hist(ads_selected,
col = 'blue',
main = 'Histogram of ads selections',
xlab = 'ads',
ylab = 'Numbers of times each ad was selected')
#read
data = read.csv('Ads_CTR_Optimisation.csv')
#信賴區間上界
#10個廣告
d = 10
#10000個用戶
n = 10000
#初始化廣告播放次數(10個元素起始值為0)
numbers_of_selections = integer(d)
sums_of_rewards = integer(d)
#紀錄每個人被發放哪一個廣告
ads_selected = integer()
total_reward = 0
for (n in 1:n) {
#每一個客戶開始會初始化
max_upper_bound = 0 #最大信賴區間上界
ad = 0 #第i個廣告
for (i in 1:d) {
if(numbers_of_selections[i] > 0) {
#平均點擊數
average_reward = sums_of_rewards[i] / numbers_of_selections
delta_i = sqrt(3 / 2 * log(n) / numbers_of_selections[i])
#信賴區間上界
upper_bound = average_reward + delta_i
}
else {
upper_bound = 1e400
}
if (upper_bound > max_upper_bound) {
max_upper_bound = upper_bound
ad = i
}
}
ads_selected = append(ads_selected, ad)
#被播放過後會加一次
numbers_of_selections[ad] = numbers_of_selections[ad] + 1
#查看是否被點擊
reward = data[n, i]
#廣告點擊數增加
sums_of_rewards[ad] = sums_of_rewards[ad] + reward
#總點擊數
total_reward = total_reward + reward
}
#視覺化
hist(ads_selected,
col = 'blue',
main = 'Histogram of ads selections',
xlab = 'ads',
ylab = 'Numbers of times each ad was selected')
ads_selected
#read
data = read.csv('Ads_CTR_Optimisation.csv')
#信賴區間上界
#10個廣告
d = 10
#10000個用戶
n = 10000
#初始化廣告播放次數(10個元素起始值為0)
numbers_of_selections = integer(d)
sums_of_rewards = integer(d)
#紀錄每個人被發放哪一個廣告
ads_selected = integer()
total_reward = 0
for (n in 1:n) {
#每一個客戶開始會初始化
max_upper_bound = 0 #最大信賴區間上界
ad = 0 #第i個廣告
for (i in 1:d) {
if(numbers_of_selections[i] > 0) {
#平均點擊數
average_reward = sums_of_rewards[i] / numbers_of_selections[i]
delta_i = sqrt(3 / 2 * log(n) / numbers_of_selections[i])
#信賴區間上界
upper_bound = average_reward + delta_i
}
else {
upper_bound = 1e400
}
if (upper_bound > max_upper_bound) {
max_upper_bound = upper_bound
ad = i
}
}
ads_selected = append(ads_selected, ad)
#被播放過後會加一次
numbers_of_selections[ad] = numbers_of_selections[ad] + 1
#查看是否被點擊
reward = data[n, i]
#廣告點擊數增加
sums_of_rewards[ad] = sums_of_rewards[ad] + reward
#總點擊數
total_reward = total_reward + reward
}
#視覺化
hist(ads_selected,
col = 'blue',
main = 'Histogram of ads selections',
xlab = 'ads',
ylab = 'Numbers of times each ad was selected')
ads_selected
#read
data = read.csv('Ads_CTR_Optimisation.csv')
#信賴區間上界
#10個廣告
d = 10
#10000個用戶
n = 10000
#初始化廣告播放次數(10個元素起始值為0)
numbers_of_selections = integer(d)
sums_of_rewards = integer(d)
#紀錄每個人被發放哪一個廣告
ads_selected = integer()
total_reward = 0
for (n in 1:n) {
#每一個客戶開始會初始化
max_upper_bound = 0 #最大信賴區間上界
ad = 0 #第i個廣告
for (i in 1:d) {
if(numbers_of_selections[i] > 0) {
#平均點擊數
average_reward = sums_of_rewards[i] / numbers_of_selections[i]
delta_i = sqrt(3 / 2 * log(n) / numbers_of_selections[i])
#信賴區間上界
upper_bound = average_reward + delta_i
}
else {
upper_bound = 1e400
}
if (upper_bound > max_upper_bound) {
max_upper_bound = upper_bound
ad = i
}
}
ads_selected = append(ads_selected, ad)
#被播放過後會加一次
numbers_of_selections[ad] = numbers_of_selections[ad] + 1
#查看是否被點擊
reward = data[n, i]
#廣告點擊數增加
sums_of_rewards[ad] = sums_of_rewards[ad] + reward
#總點擊數
total_reward = total_reward + reward
}
#視覺化
hist(ads_selected,
col = 'blue',
main = 'Histogram of ads selections',
xlab = 'ads',
ylab = 'Numbers of times each ad was selected')
#read
data = read.csv('Ads_CTR_Optimisation.csv')
#信賴區間上界
#10個廣告
d = 10
#10000個用戶
n = 10000
#初始化廣告播放次數(10個元素起始值為0)
numbers_of_selections = integer(d)
sums_of_rewards = integer(d)
#紀錄每個人被發放哪一個廣告
ads_selected = integer()
total_reward = 0
for (n in 1:n) {
#每一個客戶開始會初始化
max_upper_bound = 0 #最大信賴區間上界
ad = 0 #第i個廣告
for (i in 1:d) {
if(numbers_of_selections[i] > 0) {
#平均點擊數
average_reward = sums_of_rewards[i] / numbers_of_selections[i]
delta_i = sqrt(3 / 2 * log(n) / numbers_of_selections[i])
#信賴區間上界
upper_bound = average_reward + delta_i
}
else {
upper_bound = 1e400
}
if (upper_bound > max_upper_bound) {
max_upper_bound = upper_bound
ad = i
}
}
ads_selected = append(ads_selected, ad)
#被播放過後會加一次
numbers_of_selections[ad] = numbers_of_selections[ad] + 1
#查看是否被點擊
reward = data[n, i]
#廣告點擊數增加
sums_of_rewards[ad] = sums_of_rewards[ad] + reward
#總點擊數
total_reward = total_reward + reward
}
#視覺化
hist(ads_selected,
col = 'blue',
main = 'Histogram of ads selections',
xlab = 'ads',
ylab = 'Numbers of times each ad was selected')
ads_selected
#read
data = read.csv('Ads_CTR_Optimisation.csv')
#信賴區間上界
#10個廣告
d = 10
#10000個用戶
n = 10000
#初始化廣告播放次數(10個元素起始值為0)
numbers_of_selections = integer(d)
sums_of_rewards = integer(d)
#紀錄每個人被發放哪一個廣告
ads_selected = integer()
total_reward = 0
for (n in 1:n) {
#每一個客戶開始會初始化
max_upper_bound = 0 #最大信賴區間上界
ad = 0 #第i個廣告
for (i in 1:d) {
if(numbers_of_selections[i] > 0) {
#平均點擊數
average_reward = sums_of_rewards[i] / numbers_of_selections[i]
delta_i = sqrt(3 / 2 * log(n) / numbers_of_selections[i])
#信賴區間上界
upper_bound = average_reward + delta_i
}
else {
upper_bound = 1e400
}
if (upper_bound > max_upper_bound) {
max_upper_bound = upper_bound
ad = i
}
}
ads_selected = append(ads_selected, ad)
#被播放過後會加一次
numbers_of_selections[ad] = numbers_of_selections[ad] + 1
#查看是否被點擊
reward = data[n, ad]
#廣告點擊數增加
sums_of_rewards[ad] = sums_of_rewards[ad] + reward
#總點擊數
total_reward = total_reward + reward
}
#視覺化
hist(ads_selected,
col = 'blue',
main = 'Histogram of ads selections',
xlab = 'ads',
ylab = 'Numbers of times each ad was selected')
