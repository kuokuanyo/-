#總金額
t27=table(injury_degree,sum_money_class)
chisq.test(t27)
cramersV(t27)
#平均金額
t28=table(injury_degree,avg_money_class)
chisq.test(t28)
cramersV(t28)
#違規項目數
t29=table(injury_degree,sum_number_class)
chisq.test(t29)
exp(3.5443)
#匯入CSV
data=read.csv('/users/user/desktop/finally.csv',fileEncoding ="UTF-8")
attach(data)
#將變數轉成factor
injury_degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
or=exp(cbind(OR=coef(model1),confint(model1)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',fileEncoding ="UTF-8")
#匯入CSV
data=read.csv('/users/user/desktop/chinese.xlsx',fileEncoding ="UTF-8")
#匯入CSV
data=read.csv('/users/user/desktop/chinese.xlsx',fileEncoding ="UTF-8")
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',fileEncoding ="UTF-8")
View(data)
#匯入CSV
data=read.csv('/users/user/desktop/finally.csv',fileEncoding ="UTF-8")
View(data)
'
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',fileEncoding ="UTF-8")
attach(data)
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',fileEncoding ="UTF-8")
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',
header = header, sep =',',fileEncoding ="UTF-8")
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T,fileEncoding ="UTF-8")
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
injury_degree=as.factor(injury_degree)
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
summary(model1)
gender=as.factor(gender)
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
#將變數轉成factor
injury_degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
summary(model1)
#受傷程度
model1=glm(injury_degree~gender,family = 'binomial')
summary(model1)
View(new)
View(new)
#受傷程度
model1=glm(injury_degree~gender,family = 'binomial',data=data)
summary(model1)
injury_degree
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
#匯入CSV
data=read.table('/users/user/desktop/degree.xlsx',
sep =',',header = T,fill = T)
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
injury_degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#受傷程度
model1=glm(injury_degree~gender,family = 'binomial',data=new)
summary(model1)
data=read.csv('/users/user/desktop/finally.csv',fileEncoding ="UTF-8")
#國道
model1=glm(injury_degree~position,data=data,family = binomial)
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
model1=glm(injury_degree~position,data=data,family = binomial)
model1=glm(injury_degree~position,data=new,family = binomial)
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
View(new)
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/finally.csv',
sep =',',header = T,fill = T)
attach(data)
#匯入CSV
data=read.table('/users/user/desktop/finally.csv',
sep =',',header = T,fill = T)
#匯入CSV
data=read.table('/users/user/desktop/finally.csv',
sep =',',header = T,fill = T,,fileEncoding ="UTF-8")
attach(data)
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
View(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
View(or)
View(or)
or
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
or
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
or
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
or
setwd("C:/Users/User/Desktop/machine-learning/神經網路")
#ANN(人工神經網路)
#read
data = read.csv('Churn_Modelling.csv')
data = data[, 4:14]
#應變數不須轉換成因子(以是0或1)
#自變數欄位轉換成分類數據
data$Geography = factor(data$Geography,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
data$Gender = factor(data$Gender,
levels = c('Female', 'Male'),
labels = c(1, 2))
split = sample.split(data$Exited, SplitRatio = 0.8)
train_set = subset(data, split == TRUE)
test_set = subset(data, split == FALSE)
#測試訓練集
library(caTools)
split = sample.split(data$Exited, SplitRatio = 0.8)
train_set = subset(data, split == TRUE)
test_set = subset(data, split == FALSE)
#特徵縮放
train_set[, -c(2, 3, 11)] = scale(train_set[, -c(2, 3, 11)])
test_set[, -c(2, 3, 11)] = scale(test_set[, -c(2, 3, 11)])
View(test_set)
View(test_set)
install.packages("h2o")
#建立模型
llibrary(h20)
#建立模型
library(h20)
#建立模型
library(h2o)
h2o.init(nthreads = -1)
h2o.init(nthreads = -1)
model = h2o.deeplearning(y = data$Exited,
training_frame = as.h2o(train_set),
activation = 'Rectifier',
hidden = c(6, 6), #2層隱藏層，每層有六個向量
epochs = 100, #100期
train_samples_per_iteration = -2)
model = h2o.deeplearning(y = data$Exited,
training_frame = as.h2o(train_set),
activation = 'Rectifier',
hidden = c(6, 6), #2層隱藏層，每層有六個向量
epochs = 100, #100期
train_samples_per_iteration = -2)
model = h2o.deeplearning(y = 'Exited',
training_frame = as.h2o(train_set),
activation = 'Rectifier',
hidden = c(6, 6), #2層隱藏層，每層有六個向量
epochs = 100, #100期
train_samples_per_iteration = -2)
#預測
prob = h2o.predict(model, newdata = as.h2o(test_set[-11]))
y_pred = ifelse(prob > 0.5, 1, 0)
y_pred = as.vector(y_pred)
#混淆矩陣
cm = table(test_set[, 11], y_pred)
cm
