run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
or=exp(cbind(OR=coef(model1),confint(model1)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',fileEncoding ="UTF-8")
#匯入CSV
data=read.csv('/users/user/desktop/chinese.xlsx',fileEncoding ="UTF-8")
#匯入CSV
data=read.csv('/users/user/desktop/chinese.xlsx',fileEncoding ="UTF-8")
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',fileEncoding ="UTF-8")
View(data)
#匯入CSV
data=read.csv('/users/user/desktop/finally.csv',fileEncoding ="UTF-8")
View(data)
'
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',fileEncoding ="UTF-8")
attach(data)
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',fileEncoding ="UTF-8")
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',
header = header, sep =',',fileEncoding ="UTF-8")
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T,fileEncoding ="UTF-8")
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
injury_degree=as.factor(injury_degree)
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
summary(model1)
gender=as.factor(gender)
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
#將變數轉成factor
injury_degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
summary(model1)
#受傷程度
model1=glm(injury_degree~gender,family = 'binomial')
summary(model1)
View(new)
View(new)
#受傷程度
model1=glm(injury_degree~gender,family = 'binomial',data=data)
summary(model1)
injury_degree
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
#匯入CSV
data=read.table('/users/user/desktop/degree.xlsx',
sep =',',header = T,fill = T)
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
injury_degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#受傷程度
model1=glm(injury_degree~gender,family = 'binomial',data=new)
summary(model1)
data=read.csv('/users/user/desktop/finally.csv',fileEncoding ="UTF-8")
#國道
model1=glm(injury_degree~position,data=data,family = binomial)
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
model1=glm(injury_degree~position,data=data,family = binomial)
model1=glm(injury_degree~position,data=new,family = binomial)
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
View(new)
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/finally.csv',
sep =',',header = T,fill = T)
attach(data)
#匯入CSV
data=read.table('/users/user/desktop/finally.csv',
sep =',',header = T,fill = T)
#匯入CSV
data=read.table('/users/user/desktop/finally.csv',
sep =',',header = T,fill = T,,fileEncoding ="UTF-8")
attach(data)
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
View(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
View(or)
View(or)
or
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
or
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
or
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
or
setwd("C:/Users/User/Desktop/machine-learning/模型選擇")
#read
data = read.csv('Social_Network_Ads.csv')
data = data[, 3:5]
#train、test set
library(caTools)
split = sample.split(data$Purchased, SplitRatio = 0.75)
train_set = subset(data, split == TRUE)
test_set = subset(data, split == FALSE)
#feature scaling
train[, 1:2] = scale(train_set[, 1:2])
#feature scaling
train_set[, 1:2] = scale(train_set[, 1:2])
test_set[, -3] = scale(test_set[, -3])
#build model(kernel SVM)
library(e1071)
model = svm(Purchased ~ ., data = train_set,
type = 'C-classification', kernel = 'radial')
#predict
y_pred = predict(model, test_set[, -3])
#confusion matrix
cm = table(test_set[, 3], y_pred)
install.packages("caret")
#交叉驗證
#k為交叉驗證次數
llibrary(caret)
#交叉驗證
#k為交叉驗證次數
library(caret)
folds = createFolds(train_set$Purchased, k = 10)
model = svm(Purchased ~ .,
data = train_fold,
type = 'C-classification', kernel = 'radial')
cv = lapply(folds, function(x) {
train_fold = train_set[-x,] #將選取的列從train_set刪除
test_fold = train_set[x,] #將選取的列放入test_fold
model = svm(Purchased ~ .,
data = train_fold,
type = 'C-classification', kernel = 'radial')
y_pred = predict(model, test_fold[, -3])
cm = table(test_fold[, 3], y_pred)
accuracy = (cm[1, 1] + cm[2, 2])/(cm[1, 1] + cm[1, 2] + cm[2, 1] + cm[2, 2])
return(accuracy)
}
)
mean(as.numeric(accuracy))
mean(as.numeric(cv))
#交叉驗證
#read
data = read.csv('Social_Network_Ads.csv')
data = data[, 3:5]
#train、test set
library(caTools)
split = sample.split(data$Purchased, SplitRatio = 0.75)
train_set = subset(data, split == TRUE)
test_set = subset(data, split == FALSE)
#feature scaling
train_set[, 1:2] = scale(train_set[, 1:2])
test_set[, -3] = scale(test_set[, -3])
#build model(kernel SVM)
library(e1071)
model = svm(Purchased ~ ., data = train_set,
type = 'C-classification', kernel = 'radial')
#predict
y_pred = predict(model, test_set[, -3])
#confusion matrix
cm = table(test_set[, 3], y_pred)
#交叉驗證
#k為交叉驗證次數
library(caret)
folds = createFolds(train_set$Purchased, k = 10)
cv = lapply(folds, function(x) {
train_fold = train_set[-x,] #將選取的列從train_set刪除
test_fold = train_set[x,] #將選取的列放入test_fold
model = svm(Purchased ~ .,
data = train_fold,
type = 'C-classification', kernel = 'radial')
y_pred = predict(model, test_fold[, -3])
cm = table(test_fold[, 3], y_pred)
accuracy = (cm[1, 1] + cm[2, 2])/(cm[1, 1] + cm[1, 2] + cm[2, 1] + cm[2, 2])
return(accuracy)
}
)
mean(as.numeric(cv))
#網狀搜尋
#超參數
