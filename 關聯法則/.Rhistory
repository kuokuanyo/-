#總金額
t27=table(injury_degree,sum_money_class)
chisq.test(t27)
cramersV(t27)
#平均金額
t28=table(injury_degree,avg_money_class)
chisq.test(t28)
cramersV(t28)
#違規項目數
t29=table(injury_degree,sum_number_class)
chisq.test(t29)
exp(3.5443)
#匯入CSV
data=read.csv('/users/user/desktop/finally.csv',fileEncoding ="UTF-8")
attach(data)
#將變數轉成factor
injury_degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
or=exp(cbind(OR=coef(model1),confint(model1)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',fileEncoding ="UTF-8")
#匯入CSV
data=read.csv('/users/user/desktop/chinese.xlsx',fileEncoding ="UTF-8")
#匯入CSV
data=read.csv('/users/user/desktop/chinese.xlsx',fileEncoding ="UTF-8")
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',fileEncoding ="UTF-8")
View(data)
#匯入CSV
data=read.csv('/users/user/desktop/finally.csv',fileEncoding ="UTF-8")
View(data)
'
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',fileEncoding ="UTF-8")
attach(data)
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',fileEncoding ="UTF-8")
#匯入CSV
data=read.csv('/users/user/desktop/chinese.csv',
header = header, sep =',',fileEncoding ="UTF-8")
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T,fileEncoding ="UTF-8")
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
injury_degree=as.factor(injury_degree)
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
summary(model1)
gender=as.factor(gender)
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
#將變數轉成factor
injury_degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial)
summary(model1)
#受傷程度
model1=glm(injury_degree~gender,family = 'binomial')
summary(model1)
View(new)
View(new)
#受傷程度
model1=glm(injury_degree~gender,family = 'binomial',data=data)
summary(model1)
injury_degree
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
#匯入CSV
data=read.table('/users/user/desktop/degree.xlsx',
sep =',',header = T,fill = T)
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
injury_degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#受傷程度
model1=glm(injury_degree~gender,family = 'binomial',data=new)
summary(model1)
data=read.csv('/users/user/desktop/finally.csv',fileEncoding ="UTF-8")
#國道
model1=glm(injury_degree~position,data=data,family = binomial)
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
model1=glm(injury_degree~position,data=data,family = binomial)
model1=glm(injury_degree~position,data=new,family = binomial)
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
View(new)
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/finally.csv',
sep =',',header = T,fill = T)
attach(data)
#匯入CSV
data=read.table('/users/user/desktop/finally.csv',
sep =',',header = T,fill = T)
#匯入CSV
data=read.table('/users/user/desktop/finally.csv',
sep =',',header = T,fill = T,,fileEncoding ="UTF-8")
attach(data)
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
View(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
View(or)
View(or)
or
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
#degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
or
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
or
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/chinese.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
#匯入CSV
data=read.table('/users/user/desktop/degree.csv',
sep =',',header = T,fill = T)
attach(data)
#將變數轉成factor
degree=as.factor(injury_degree)
gender=as.factor(gender)
injury_position=as.factor(injury_position)
protection=as.factor(protection)
phone=as.factor(phone)
person=as.factor(person)
qualifications=as.factor(qualifications)
license=as.factor(license)
drinking=as.factor(drinking)
hit=as.factor(hit)
run_away=as.factor(run_away)
age_level=as.factor(age_level)
#重新寫成資料框架
new=data.frame(injury_degree,gender,injury_position,protection,
phone,person,qualifications,license,drinking,hit,
run_away,age_level)
attach(new)
#勝算比公式
or=exp(cbind(OR=coef(model),confint(model)))
#受傷程度
model1=glm(injury_degree~gender,family = binomial,data=new)
summary(model1)
or=exp(cbind(OR=coef(model1),confint(model1)))
or
setwd("C:/Users/User/Desktop/machine-learning/關聯法則")
install.packages("arules")
#利用read.transactions將所有產品整理
data = read.transactions('Market_Basket_Optimisation.csv',
sep = ',', rm.duplicates = TRUE)
#read
library(arules)
data = read.csv('Market_Basket_Optimisation.csv')
#利用read.transactions將所有產品整理
data = read.transactions('Market_Basket_Optimisation.csv',
sep = ',', rm.duplicates = TRUE)
View(data)
#read
#利用read.transactions將所有產品整理
library(arules)
data = read.transactions('Market_Basket_Optimisation.csv',
sep = ',', rm.duplicates = TRUE)
#read
#利用read.transactions將所有產品整理
library(arules)
data = read.transactions('Market_Basket_Optimisation.csv',
sep = ',', rm.duplicates = TRUE)
#查看購買資訊
summary(data)
#畫出前n名的產品
itemFrequencyPlot(data, topN = 10)
#read
#利用read.transactions將所有產品整理
library(arules)
data = read.transactions('Market_Basket_Optimisation.csv',
sep = ',', rm.duplicates = TRUE)
#查看購買資訊
summary(data)
#畫出前n名的產品
itemFrequencyPlot(data, topN = 10)
rules = apriori(data, parameter = list(support = 0.003, confidence = 0.4))
#read
#利用read.transactions將所有產品整理
library(arules)
data = read.transactions('Market_Basket_Optimisation.csv',
sep = ',', rm.duplicates = TRUE)
#查看購買資訊
summary(data)
#畫出前n名的產品
itemFrequencyPlot(data, topN = 10)
#利用先驗演算法運算
#parameter設定支持度及信心度
rules = apriori(data, parameter = list(support = 0.003, confidence = 0.4))
#read
#利用read.transactions將所有產品整理
library(arules)
data = read.transactions('Market_Basket_Optimisation.csv',
sep = ',', rm.duplicates = TRUE)
#查看購買資訊
summary(data)
#畫出前n名的產品
itemFrequencyPlot(data, topN = 10)
#利用先驗演算法運算
#parameter設定支持度及信心度
rules = apriori(data, parameter = list(support = 0.003, confidence = 0.4))
